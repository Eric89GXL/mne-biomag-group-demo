

.. _sphx_glr_auto_scripts_02-python_filtering.py:


Filter using MNE-python
=======================

The data are bandpass filtered (1 - 40 Hz) using linear-phase fir filter with
delay compensation. The filtered data are saved to separate files to the
subject's'MEG' directory.



.. code-block:: python


    import os
    import os.path as op
    from warnings import warn

    import mne
    from mne.parallel import parallel_func

    from library.config import study_path, meg_dir, N_JOBS

    if not op.exists(meg_dir):
        os.mkdir(meg_dir)

    def run_filter(subject_id):
        subject = "sub%03d" % subject_id
        print("processing subject: %s" % subject)
        raw_fname_out = op.join(meg_dir, subject, 'run_%02d_filt_sss_raw.fif')
        raw_fname_in = op.join(study_path, 'ds117', subject, 'MEG',
                               'run_%02d_sss.fif')
        for run in range(1, 7):
            raw_in = raw_fname_in % run
            try:
                raw = mne.io.read_raw_fif(raw_in, preload=True)
            except AttributeError:
                # Some files on openfmri are corrupted and cannot be read.
                warn('Could not read file %s. '
                     'Skipping run %s from subject %s.' % (raw_in, run, subject))
                continue
            raw_out = raw_fname_out % run
            if not op.exists(op.join(meg_dir, subject)):
                os.mkdir(op.join(meg_dir, subject))

            raw.filter(1, 40, l_trans_bandwidth=0.5, h_trans_bandwidth='auto',
                       phase='zero', fir_window='hamming', filter_length='auto',
                       n_jobs=N_JOBS)
            raw.save(raw_out, overwrite=True)


    parallel, run_func, _ = parallel_func(run_filter, n_jobs=N_JOBS)
    parallel(run_func(subject_id) for subject_id in range(1, 20))

**Total running time of the script:**
(0 minutes 0.000 seconds)



.. container:: sphx-glr-download

    :download:`Download Python source code: 02-python_filtering.py <02-python_filtering.py>`


.. container:: sphx-glr-download

    :download:`Download IPython notebook: 02-python_filtering.ipynb <02-python_filtering.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
