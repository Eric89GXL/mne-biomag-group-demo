

.. _sphx_glr_auto_examples_plot_group.py:


==============
Group analysis
==============

Run the group analysis.



.. code-block:: python

    import os.path as op

    import mne

    from library.config import meg_dir, subjects_dir, ylim

    evokeds = mne.read_evokeds(op.join(meg_dir, 'grand_average-ave.fif'))[:3]





.. rst-class:: sphx-glr-script-out

 Out::

    Reading /tsi/doctorants/data_gramfort/dgw_faces/MEG/grand_average-ave.fif ...
        Read a total of 1 projection items:
            Average EEG reference (1 x 70) active
        Found the data of interest:
            t =    -200.00 ...     800.00 ms (0.062 * famous + 0.062 * famous + 0.062 * famous + 0.062 * famous + 0.062 * famous + 0.062 * famous + 0.062 * famous + 0.062 * famous + 0.062 * famous + 0.062 * famous + 0.062 * famous + 0.062 * famous + 0.062 * famous + 0.062 * famous + 0.062 * famous + 0.062 * famous)
            0 CTF compensation matrices available
            nave = 4140 - aspect type = 100
    Projections have already been applied. Setting proj attribute to True.
    No baseline correction applied
        Read a total of 1 projection items:
            Average EEG reference (1 x 70) active
        Found the data of interest:
            t =    -200.00 ...     800.00 ms (0.062 * scrambled + 0.062 * scrambled + 0.062 * scrambled + 0.062 * scrambled + 0.062 * scrambled + 0.062 * scrambled + 0.062 * scrambled + 0.062 * scrambled + 0.062 * scrambled + 0.062 * scrambled + 0.062 * scrambled + 0.062 * scrambled + 0.062 * scrambled + 0.062 * scrambled + 0.062 * scrambled + 0.062 * scrambled)
            0 CTF compensation matrices available
            nave = 4001 - aspect type = 100
    Projections have already been applied. Setting proj attribute to True.
    No baseline correction applied
        Read a total of 1 projection items:
            Average EEG reference (1 x 70) active
        Found the data of interest:
            t =    -200.00 ...     800.00 ms (0.062 * unfamiliar + 0.062 * unfamiliar + 0.062 * unfamiliar + 0.062 * unfamiliar + 0.062 * unfamiliar + 0.062 * unfamiliar + 0.062 * unfamiliar + 0.062 * unfamiliar + 0.062 * unfamiliar + 0.062 * unfamiliar + 0.062 * unfamiliar + 0.062 * unfamiliar + 0.062 * unfamiliar + 0.062 * unfamiliar + 0.062 * unfamiliar + 0.062 * unfamiliar)
            0 CTF compensation matrices available
            nave = 4135 - aspect type = 100
    Projections have already been applied. Setting proj attribute to True.
    No baseline correction applied
        Read a total of 1 projection items:
            Average EEG reference (1 x 70) active
        Found the data of interest:
            t =    -200.00 ...     800.00 ms (0.062 * contrast + 0.062 * contrast + 0.062 * contrast + 0.062 * contrast + 0.062 * contrast + 0.062 * contrast + 0.062 * contrast + 0.062 * contrast + 0.062 * contrast + 0.062 * contrast + 0.062 * contrast + 0.062 * contrast + 0.062 * contrast + 0.062 * contrast + 0.062 * contrast + 0.062 * contrast)
            0 CTF compensation matrices available
            nave = 2698 - aspect type = 100
    Projections have already been applied. Setting proj attribute to True.
    No baseline correction applied
        Read a total of 1 projection items:
            Average EEG reference (1 x 70) active
        Found the data of interest:
            t =    -200.00 ...     800.00 ms (0.062 * faces + 0.062 * faces + 0.062 * faces + 0.062 * faces + 0.062 * faces + 0.062 * faces + 0.062 * faces + 0.062 * faces + 0.062 * faces + 0.062 * faces + 0.062 * faces + 0.062 * faces + 0.062 * faces + 0.062 * faces + 0.062 * faces + 0.062 * faces)
            0 CTF compensation matrices available
            nave = 8275 - aspect type = 100
    Projections have already been applied. Setting proj attribute to True.
    No baseline correction applied


Sensor-space. See :ref:`sphx_glr_auto_scripts_09-group_average_sensors.py`



.. code-block:: python

    evokeds[0].plot_joint(title='Famous', ts_args={'ylim': ylim})
    evokeds[1].plot_joint(title='Scrambled', ts_args={'ylim': ylim})
    evokeds[2].plot_joint(title='Unfamiliar', ts_args={'ylim': ylim})

    idx = evokeds[0].ch_names.index('EEG070')
    assert evokeds[1].ch_names[idx] == 'EEG070'
    assert evokeds[2].ch_names[idx] == 'EEG070'
    mapping = {'Famous': evokeds[0], 'Scrambled': evokeds[1],
               'Unfamiliar': evokeds[2]}
    mne.viz.plot_compare_evokeds(mapping, [idx], title='EEG070 (No baseline)')

    for evoked in evokeds:
        evoked.apply_baseline()
    mne.viz.plot_compare_evokeds(mapping, [idx],
                                 title='EEG070 (Baseline from -200ms to 0ms)',)




.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/images/sphx_glr_plot_group_001.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_group_002.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_group_003.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_group_004.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_group_005.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_group_006.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_group_007.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_group_008.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_group_009.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_group_010.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_group_011.png
            :scale: 47


.. rst-class:: sphx-glr-script-out

 Out::

    Applying baseline correction (mode: mean)
    Applying baseline correction (mode: mean)
    Applying baseline correction (mode: mean)


Source-space. See :ref:`sphx_glr_auto_scripts_14-group_average_source.py`



.. code-block:: python

    fname = op.join(meg_dir, 'contrast-average')
    stc = mne.read_source_estimate(fname, subject='fsaverage')

    brain = stc.plot(views=['ven'], hemi='both', subject='fsaverage',
                     subjects_dir=subjects_dir, initial_time=0.17, time_unit='s',
                     clim={'lims': [99.75, 99.88, 99.98]})




.. image:: /auto_examples/images/sphx_glr_plot_group_012.png
    :align: center


.. rst-class:: sphx-glr-script-out

 Out::

    Updating smoothing matrix, be patient..
    Smoothing matrix creation, step 1
    Smoothing matrix creation, step 2
    Smoothing matrix creation, step 3
    Smoothing matrix creation, step 4
    Smoothing matrix creation, step 5
    Smoothing matrix creation, step 6
    Smoothing matrix creation, step 7
    Smoothing matrix creation, step 8
    Smoothing matrix creation, step 9
    Smoothing matrix creation, step 10
    colormap: fmin=2.96e+00 fmid=3.22e+00 fmax=3.89e+00 transparent=1
    Updating smoothing matrix, be patient..
    Smoothing matrix creation, step 1
    Smoothing matrix creation, step 2
    Smoothing matrix creation, step 3
    Smoothing matrix creation, step 4
    Smoothing matrix creation, step 5
    Smoothing matrix creation, step 6
    Smoothing matrix creation, step 7
    Smoothing matrix creation, step 8
    Smoothing matrix creation, step 9
    Smoothing matrix creation, step 10
    colormap: fmin=2.96e+00 fmid=3.22e+00 fmax=3.89e+00 transparent=1


LCMV beamformer



.. code-block:: python

    fname = op.join(meg_dir, 'contrast-average-lcmv')
    stc = mne.read_source_estimate(fname, subject='fsaverage')

    brain = stc.plot(views=['ven'], hemi='both', subject='fsaverage',
                     subjects_dir=subjects_dir, initial_time=0.17, time_unit='s',
                     clim={'lims': [99.75, 99.88, 99.98]})



.. image:: /auto_examples/images/sphx_glr_plot_group_013.png
    :align: center


.. rst-class:: sphx-glr-script-out

 Out::

    Updating smoothing matrix, be patient..
    Smoothing matrix creation, step 1
    Smoothing matrix creation, step 2
    Smoothing matrix creation, step 3
    Smoothing matrix creation, step 4
    Smoothing matrix creation, step 5
    Smoothing matrix creation, step 6
    Smoothing matrix creation, step 7
    Smoothing matrix creation, step 8
    Smoothing matrix creation, step 9
    Smoothing matrix creation, step 10
    colormap: fmin=2.82e-01 fmid=3.11e-01 fmax=3.67e-01 transparent=1
    Updating smoothing matrix, be patient..
    Smoothing matrix creation, step 1
    Smoothing matrix creation, step 2
    Smoothing matrix creation, step 3
    Smoothing matrix creation, step 4
    Smoothing matrix creation, step 5
    Smoothing matrix creation, step 6
    Smoothing matrix creation, step 7
    Smoothing matrix creation, step 8
    Smoothing matrix creation, step 9
    Smoothing matrix creation, step 10
    colormap: fmin=2.82e-01 fmid=3.11e-01 fmax=3.67e-01 transparent=1


**Total running time of the script:**
(0 minutes 25.974 seconds)



.. container:: sphx-glr-download

    :download:`Download Python source code: plot_group.py <plot_group.py>`


.. container:: sphx-glr-download

    :download:`Download IPython notebook: plot_group.ipynb <plot_group.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
