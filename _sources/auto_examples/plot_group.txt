

.. _sphx_glr_auto_examples_plot_group.py:


==============
Group analysis
==============

Run the group analysis.




.. code-block:: pytb

    Traceback (most recent call last):
      File "/tsi/doctorants/mainak/github_repos/sphinx-gallery/sphinx_gallery/gen_rst.py", line 520, in execute_code_block
        exec(code_block, example_globals)
      File "<string>", line 25, in <module>
      File "<string>", line 2, in read_evokeds
      File "/tsi/doctorants/mainak/mne-python/mne/utils.py", line 693, in verbose
        return function(*args, **kwargs)
      File "/tsi/doctorants/mainak/mne-python/mne/evoked.py", line 968, in read_evokeds
        evoked_node = _get_evoked_node(fname)
      File "/tsi/doctorants/mainak/mne-python/mne/evoked.py", line 791, in _get_evoked_node
        f, tree, _ = fiff_open(fname)
      File "<string>", line 2, in fiff_open
      File "/tsi/doctorants/mainak/mne-python/mne/utils.py", line 693, in verbose
        return function(*args, **kwargs)
      File "/tsi/doctorants/mainak/mne-python/mne/io/open.py", line 101, in fiff_open
        fid = _fiff_get_fid(fname)
      File "/tsi/doctorants/mainak/mne-python/mne/io/open.py", line 28, in _fiff_get_fid
        fid = open(fname, "rb")  # Open in binary mode
    IOError: [Errno 2] Aucun fichier ou dossier de ce type: '/tsi/doctorants/data_gramfort/dgw_faces/MEG/eeg_famous-ave.fif'





.. code-block:: python


    import os
    import os.path as op

    import mne

    user = os.environ['USER']
    if user == 'gramfort':
        study_path = '/tsi/doctorants/data_gramfort/dgw_faces'
        N_JOBS = 8
    elif user == 'jleppakangas' or user == 'mjas':
        study_path = '/tsi/doctorants/data_gramfort/dgw_faces'
        N_JOBS = 4
    else:
        study_path = op.join(op.dirname(__file__), '..', '..', '..')

    subjects_dir = op.join(study_path, 'subjects')
    meg_dir = op.join(study_path, 'MEG')

    faces_fname = op.join(study_path, 'MEG', 'eeg_faces-ave.fif')
    faces = mne.read_evokeds(faces_fname)[0]
    faces.plot_joint()

    famous_fname = op.join(study_path, 'MEG', 'eeg_famous-ave.fif')
    famous = mne.read_evokeds(famous_fname)[0]

    unfamiliar_fname = op.join(study_path, 'MEG', 'eeg_unfamiliar-ave.fif')
    unfamiliar = mne.read_evokeds(unfamiliar_fname)[0]

    scrambled = mne.read_evokeds(op.join(study_path, 'MEG',
                                         'eeg_scrambled-ave.fif'))[0]
    scrambled.plot_joint()

    idx = faces.ch_names.index('EEG070')
    mne.viz.plot_compare_evokeds({'Famous': famous, 'Unfamiliar': unfamiliar,
                                  'Scrambled': scrambled}, [idx])

    fname = op.join(study_path, 'MEG', 'contrast-average')
    stc = mne.read_source_estimate(fname, subject='fsaverage')
    brain = stc.plot(views=['cau'], hemi='both', subject='fsaverage',
                     subjects_dir=subjects_dir)
    brain.set_data_time_index(407)

**Total running time of the script:**
(0 minutes 0.000 seconds)



.. container:: sphx-glr-download

    :download:`Download Python source code: plot_group.py <plot_group.py>`


.. container:: sphx-glr-download

    :download:`Download IPython notebook: plot_group.ipynb <plot_group.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
