

.. _sphx_glr_auto_examples_plot_filter.py:


Filtering
=========

Plot filter properties.



.. code-block:: python

    import numpy as np
    import matplotlib.pyplot as plt

    import mne







First we create some data with 30000 samples of zeros with an impulse at the
middle. Then we construct a raw data structure and set a sampling frequency
to 1000. Thus, we have 20 seconds of data with an impulse at 15 seconds.



.. code-block:: python

    n_samples = 30000
    sfreq = 1000
    info = mne.create_info(ch_names=['test'], sfreq=sfreq, ch_types=['eeg'])
    data = np.zeros(n_samples)
    data[n_samples // 2] = 1e-6
    times = np.linspace(0, n_samples // sfreq, n_samples)
    raw = mne.io.RawArray(np.array([data]), info)





.. rst-class:: sphx-glr-script-out

 Out::

    Creating RawArray with float64 data, n_channels=1, n_times=30000
        Range : 0 ... 29999 =      0.000 ...    29.999 secs
    Ready.


We lowpass filter the data and plot the frequency spectrum and the impulse
response of the filter.



.. code-block:: python

    raw.filter(None, 40)
    plt.plot(times, raw[0][0][0])
    plt.xlabel('Time (s)')
    plt.ylabel('Amplitude')
    plt.title('Impulse response')
    plt.show()
    raw.plot_psd(fmin=20, fmax=60)





.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/images/sphx_glr_plot_filter_001.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_filter_002.png
            :scale: 47


.. rst-class:: sphx-glr-script-out

 Out::

    Low-pass filtering at 40 Hz
    Multiple deprecated filter parameters were used:
    phase in 0.13 is "zero-double" but will change to "zero" in 0.14
    fir_window in 0.13 is "hann" but will change to "hamming" in 0.14
    upper transition bandwidth in 0.13 is 0.5 Hz but will change to "auto" in 0.14
    The default filter length in 0.13 is "10s" but will change to "auto" in 0.14
    Effective window size : 2.048 (s)


Let's do the same after highpass filtering at 1 Hz.



.. code-block:: python

    raw.filter(1, None)
    plt.plot(times, raw[0][0][0])
    plt.xlabel('Time (s)')
    plt.ylabel('Amplitude')
    plt.title('Impulse response')
    plt.show()
    raw.plot_psd(fmax=10)



.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/images/sphx_glr_plot_filter_003.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_filter_004.png
            :scale: 47


.. rst-class:: sphx-glr-script-out

 Out::

    High-pass filtering at 1 Hz
    Multiple deprecated filter parameters were used:
    phase in 0.13 is "zero-double" but will change to "zero" in 0.14
    fir_window in 0.13 is "hann" but will change to "hamming" in 0.14
    lower transition bandwidth in 0.13 is 0.5 Hz but will change to "auto" in 0.14
    The default filter length in 0.13 is "10s" but will change to "auto" in 0.14
    Effective window size : 2.048 (s)


**Total running time of the script:**
(0 minutes 4.944 seconds)



.. container:: sphx-glr-download

    :download:`Download Python source code: plot_filter.py <plot_filter.py>`


.. container:: sphx-glr-download

    :download:`Download IPython notebook: plot_filter.ipynb <plot_filter.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
