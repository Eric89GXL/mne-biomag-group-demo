

.. _sphx_glr_auto_examples_plot_ica.py:


====================
Remove ECG using ICA
====================

Remove ICA using ECG.



.. code-block:: python

    import os
    import os.path as op
    import numpy as np

    import mne
    from mne.io.constants import FIFF
    from mne.preprocessing import create_ecg_epochs, read_ica

    from library.config import meg_dir, map_subjects







We define the events and the onset and offset of the epochs



.. code-block:: python


    events_id = {
        'face/famous/first': 5,
        'face/famous/immediate': 6,
        'face/famous/long': 7,
        'face/unfamiliar/first': 13,
        'face/unfamiliar/immediate': 14,
        'face/unfamiliar/long': 15,
        'scrambled/first': 17,
        'scrambled/immediate': 18,
        'scrambled/long': 19,
    }

    tmin, tmax = -0.2, 0.8
    reject = dict(grad=4000e-13, mag=4e-12, eog=180e-6)
    baseline = None

    subject_id, run = 5, 1
    subject = "sub%03d" % subject_id
    print("processing subject: %s" % subject)

    data_path = op.join(meg_dir, subject)





.. rst-class:: sphx-glr-script-out

 Out::

    processing subject: sub005


Now we get the bad channels



.. code-block:: python


    # Get all bad channels
    mapping = map_subjects[subject_id]  # map to correct subject
    all_bads = list()

    bads = list()
    bad_name = op.join('bads', mapping, 'run_%02d_raw_tr.fif_bad' % run)
    if os.path.exists(bad_name):
        with open(bad_name) as f:
            for line in f:
                bads.append(line.strip())







We remove the EEG reference so that we can change the channel type
for ECG and EOG



.. code-block:: python


    run_fname = op.join(data_path, 'run_%02d_filt_sss_raw.fif' % run)
    raw = mne.io.Raw(run_fname, preload=True, add_eeg_ref=False)
    for idx, proj in enumerate(raw.info['projs']):  # find idx for EEG-ref
        if proj['kind'] == FIFF.FIFFV_MNE_PROJ_ITEM_EEG_AVREF:
            proj_idx = idx
            break
    raw.del_proj(proj_idx)  # remove EEG average ref





.. rst-class:: sphx-glr-script-out

 Out::

    Opening raw data file /tsi/doctorants/data_gramfort/dgw_faces/MEG/sub005/run_01_filt_sss_raw.fif...
        Read a total of 1 projection items:
            Average EEG reference (1 x 74)  idle
        Range : 154000 ... 699599 =    140.000 ...   635.999 secs
    Ready.
    Current compensation grade : 0
    Reading 0 ... 545599  =      0.000 ...   495.999 secs...


Then we change the channel type for ECG and EOG



.. code-block:: python


    raw.set_channel_types({'EEG061': 'eog', 'EEG062': 'eog', 'EEG063': 'ecg',
                           'EEG064': 'misc'})  # EEG064 free floating el.
    raw.rename_channels({'EEG061': 'EOG061', 'EEG062': 'EOG062',
                         'EEG063': 'ECG063'})







We remove the bad eye blink segments from the raw by marking
``raw.annotations``. They will be removed before constructing epochs



.. code-block:: python


    eog_events = mne.preprocessing.find_eog_events(raw)
    eog_events[:, 0] -= int(0.25 * raw.info['sfreq'])
    annotations = mne.Annotations(eog_events[:, 0] / raw.info['sfreq'],
                                  np.repeat(0.5, len(eog_events)),
                                  'BAD_blink', raw.info['meas_date'])
    raw.annotations = annotations  # Remove epochs with blinks





.. rst-class:: sphx-glr-script-out

 Out::

    EOG channel index for this subject is: [366 367]
    Filtering the data to remove DC offset to help distinguish blinks from saccades
    Band-pass filtering from 2 - 45 Hz
    Band-pass filtering from 2 - 45 Hz
    Band-pass filtering from 1 - 10 Hz
    Now detecting blinks and generating corresponding events
    Number of EOG events detected : 328
    Annotation expanding outside the data range. Limiting to the end of data.


must take into account the 34 ms delay in the trigger channel



.. code-block:: python


    delay = int(0.0345 * raw.info['sfreq'])
    events = mne.read_events(op.join(data_path,
                                     'run_%02d_filt_sss-eve.fif' % run))
    events[:, 0] = events[:, 0] + delay







Bad sensors are repaired



.. code-block:: python


    raw.info['bads'] = bads
    raw.interpolate_bads()
    raw.set_eeg_reference()





.. rst-class:: sphx-glr-script-out

 Out::

    Computing interpolation matrix from 70 sensor positions
    Interpolating 0 sensors
    Adding average EEG reference projection.
    1 projection items deactivated


... and finally ``Epochs`` are constructed



.. code-block:: python


    picks = mne.pick_types(raw.info, meg=True, eeg=True, stim=True,
                           eog=True)

    # Read epochs
    epochs = mne.Epochs(raw, events, events_id, tmin, tmax, proj=True,
                        picks=picks, baseline=baseline, preload=True,
                        decim=2, reject=reject)





.. rst-class:: sphx-glr-script-out

 Out::

    146 matching events found
    No baseline correction applied
    add_eeg_ref defaults to True in 0.13, will default to False in 0.14, and will be removed in 0.15. We recommend to use add_eeg_ref=False and set_eeg_reference() instead.
    Created an SSP operator (subspace dimension = 1)
    1 projection items activated
    Loading data for 146 events and 1101 original time points ...
        Rejecting  epoch based on MAG : [u'MEG1131', u'MEG1631', u'MEG1911', u'MEG2231', u'MEG2311', u'MEG2441']
        Rejecting  epoch based on EOG : ['EOG062']
        Rejecting  epoch based on EOG : ['EOG062']
        Rejecting  epoch based on EOG : ['EOG062']
        Rejecting  epoch based on EOG : ['EOG062']
        Rejecting  epoch based on EOG : ['EOG062']
    67 bad epochs dropped


Now let's get to some serious ICA preprocessing



.. code-block:: python


    ica_name = op.join(meg_dir, subject, 'run_%02d-ica.fif' % run)
    ica = read_ica(ica_name)
    n_max_ecg = 3  # use max 3 components
    ecg_epochs = create_ecg_epochs(raw, tmin=-.5, tmax=.5)
    ecg_inds, scores_ecg = ica.find_bads_ecg(ecg_epochs, method='ctps',
                                             threshold=0.8)
    ica.plot_sources(raw, exclude=ecg_inds)
    ica.plot_scores(scores_ecg, exclude=ecg_inds)
    ica.plot_components(ecg_inds)
    ica.exclude += ecg_inds[:n_max_ecg]

    ica.apply(epochs)



.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/images/sphx_glr_plot_ica_001.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_ica_002.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_ica_003.png
            :scale: 47


.. rst-class:: sphx-glr-script-out

 Out::

    Reading /tsi/doctorants/data_gramfort/dgw_faces/MEG/sub005/run_01-ica.fif ...
        Read a total of 1 projection items:
            Average EEG reference (1 x 74)  idle
    Now restoring ICA solution ...
    Ready.
    Using channel ECG063 to identify heart beats.
    Band-pass filtering from 8 - 16 Hz
    Number of ECG events detected : 593 (average pulse 71 / min.)
    593 matching events found
    No baseline correction applied
    Created an SSP operator (subspace dimension = 1)
    Loading data for 593 events and 1101 original time points ...
    445 bad epochs dropped
    Transforming to ICA space (39 components)
    Zeroing out 1 ICA components


**Total running time of the script:**
(0 minutes 17.852 seconds)



.. container:: sphx-glr-download

    :download:`Download Python source code: plot_ica.py <plot_ica.py>`


.. container:: sphx-glr-download

    :download:`Download IPython notebook: plot_ica.ipynb <plot_ica.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
