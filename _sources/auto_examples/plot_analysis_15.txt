

.. _sphx_glr_auto_examples_plot_analysis_15.py:


==========================================
Plotting the analysis chain (Subject 15)
==========================================

Run the analysis.



.. code-block:: python


    import os
    import os.path as op
    import numpy as np

    import mne

    from library.config import study_path






Configuration



.. code-block:: python


    subjects_dir = os.path.join(study_path, 'subjects')
    meg_dir = os.path.join(study_path, 'MEG')

    subject = "sub%03d" % int(15)

    fname = op.join(study_path, 'ds117', subject, 'MEG', 'run_01_raw.fif')
    raw = mne.io.read_raw_fif(fname)

    fname = op.join(meg_dir, subject, 'run_01_filt_sss_raw.fif')
    raw_filt = mne.io.read_raw_fif(fname)





.. rst-class:: sphx-glr-script-out

 Out::

    add_eeg_ref defaults to True in 0.13, will default to False in 0.14, and will be removed in 0.15. We recommend to use add_eeg_ref=False and set_eeg_reference() instead.
    add_eeg_ref defaults to True in 0.13, will default to False in 0.14, and will be removed in 0.15. We recommend to use add_eeg_ref=False and set_eeg_reference() instead.


Filtering



.. code-block:: python

    raw.plot_psd()
    raw_filt.plot_psd()




.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/images/sphx_glr_plot_analysis_15_001.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_analysis_15_002.png
            :scale: 47




Events



.. code-block:: python

    events = mne.read_events(op.join(meg_dir, subject, 'run_01_filt_sss-eve.fif'))
    fig = mne.viz.plot_events(events, show=False)
    fig.suptitle('Events from run 01')

    epochs = mne.read_epochs(op.join(meg_dir, subject, subject + '-epo.fif'))
    epochs.plot_drop_log()




.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/images/sphx_glr_plot_analysis_15_003.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_analysis_15_004.png
            :scale: 47


.. rst-class:: sphx-glr-script-out

 Out::

    More events than colors available. You should pass a list of unique colors.


Evoked responses



.. code-block:: python

    evo_fname = op.join(meg_dir, subject, '%s-ave.fif' % subject)
    evoked = mne.read_evokeds(evo_fname)







Faces



.. code-block:: python

    famous_evo, scrambled_evo, unfamiliar_evo, contrast_evo, faces_evo = evoked
    faces_evo.plot(spatial_colors=True, gfp=True, ylim={'eeg': (-10, 10)},
                   window_title='Faces %s' % subject)




.. image:: /auto_examples/images/sphx_glr_plot_analysis_15_005.png
    :align: center




Famous



.. code-block:: python

    famous_evo.plot(spatial_colors=True, gfp=True,
                    window_title='Famous %s' % subject)




.. image:: /auto_examples/images/sphx_glr_plot_analysis_15_006.png
    :align: center




Scrambled



.. code-block:: python

    scrambled_evo.plot(spatial_colors=True, gfp=True,
                       window_title='Scrambled %s' % subject)




.. image:: /auto_examples/images/sphx_glr_plot_analysis_15_007.png
    :align: center




Unfamiliar



.. code-block:: python

    unfamiliar_evo.plot(spatial_colors=True, gfp=True,
                        window_title='Unfamiliar %s' % subject)




.. image:: /auto_examples/images/sphx_glr_plot_analysis_15_008.png
    :align: center




Faces - scrambled



.. code-block:: python

    contrast_evo.plot(spatial_colors=True, gfp=True,
                      window_title='Faces - scrambled %s' % subject)




.. image:: /auto_examples/images/sphx_glr_plot_analysis_15_009.png
    :align: center




Topomaps



.. code-block:: python

    times = np.arange(0.05, 0.3, 0.025)
    famous_evo.plot_topomap(times=times, title='Famous %s' % subject)
    scrambled_evo.plot_topomap(times=times, title='Scrambled %s' % subject)
    unfamiliar_evo.plot_topomap(times=times, title='Unfamiliar %s' % subject)
    contrast_evo.plot_topomap(times=times, title='Faces - scrambled %s' % subject)




.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/images/sphx_glr_plot_analysis_15_010.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_analysis_15_011.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_analysis_15_012.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_analysis_15_013.png
            :scale: 47




TFR



.. code-block:: python

    fpower = mne.time_frequency.read_tfrs(
        op.join(meg_dir, subject, '%s-faces-tfr.h5' % subject))[0]
    fitc = mne.time_frequency.read_tfrs(
        op.join(meg_dir, subject, '%s-itc_faces-tfr.h5' % subject))[0]
    spower = mne.time_frequency.read_tfrs(
        op.join(meg_dir, subject, '%s-scrambled-tfr.h5' % subject))[0]
    sitc = mne.time_frequency.read_tfrs(
        op.join(meg_dir, subject, '%s-itc_scrambled-tfr.h5' % subject))[0]
    channel = 'EEG070'
    idx = [fpower.ch_names.index(channel)]
    fpower.plot(idx, title='Faces power %s' % channel, baseline=(-0.1, 0.0),
                mode='logratio')
    spower.plot(idx, title='Scrambled power %s' % channel, baseline=(-0.1, 0.0),
                mode='logratio')
    fitc.plot(idx, title='Faces ITC %s' % channel, baseline=(-0.1, 0.0),
              mode='logratio')
    sitc.plot(idx, title='Scrambled ITC %s' % channel, baseline=(-0.1, 0.0),
              mode='logratio')





.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/images/sphx_glr_plot_analysis_15_014.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_analysis_15_015.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_analysis_15_016.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_analysis_15_017.png
            :scale: 47




Covariance



.. code-block:: python

    cov = mne.read_cov(op.join(meg_dir, subject, '%s-cov.fif' % subject))
    mne.viz.plot_cov(cov, faces_evo.info)
    faces_evo.plot_white(cov)



.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/images/sphx_glr_plot_analysis_15_018.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_analysis_15_019.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_analysis_15_020.png
            :scale: 47


.. rst-class:: sphx-glr-script-out

 Out::

    No average EEG reference present in info["projs"], covariance may be adversely affected. Consider recomputing covariance using a raw file with an average eeg reference projector added.


**Total running time of the script:** ( 0 minutes  59.702 seconds)



.. container:: sphx-glr-download

    :download:`Download Python source code: plot_analysis_15.py <plot_analysis_15.py>`



.. container:: sphx-glr-download

    :download:`Download Jupyter notebook: plot_analysis_15.ipynb <plot_analysis_15.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
