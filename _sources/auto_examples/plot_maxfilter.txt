

.. _sphx_glr_auto_examples_plot_maxfilter.py:


Maxwell filtering
=================

Demonstrates maxwell filtering for one run (sub002, run01) using MNE-python.



.. code-block:: python


    import os.path as op

    import mne
    from mne import Epochs
    from mne.preprocessing import maxwell_filter

    from library.config import study_path, cal, ctc

    event_ids = [5, 6, 7]  # Famous faces

    subject = "sub002"

    raw_fname_in = op.join(study_path, 'ds117', subject, 'MEG', 'run_01_raw.fif')
    sss_fname_in = op.join(study_path, 'ds117', subject, 'MEG', 'run_01_sss.fif')







First the filtered raw data.



.. code-block:: python

    raw = mne.io.read_raw_fif(raw_fname_in, preload=True)

    raw.info['bads'] = ['MEG1031', 'MEG1111', 'MEG2032']  # set bads
    picks = mne.pick_types(raw.info, meg=True, exclude='bads')
    raw.filter(1, 40, fir_window='hann', l_trans_bandwidth=0.5, phase='zero',
               h_trans_bandwidth='auto', filter_length='10s')

    events = mne.find_events(raw, stim_channel='STI101', consecutive='increasing',
                             mask=4352, mask_type='not_and', min_duration=0.003,
                             verbose=True)
    evoked_before = Epochs(raw, events, event_id=event_ids, picks=picks).average()





.. rst-class:: sphx-glr-script-out

 Out::

    Opening raw data file /tsi/doctorants/data_gramfort/dgw_faces/ds117/sub002/MEG/run_01_raw.fif...
        Read a total of 8 projection items:
            mag_ssp_upright.fif : PCA-mags-v1 (1 x 306)  idle
            mag_ssp_upright.fif : PCA-mags-v2 (1 x 306)  idle
            mag_ssp_upright.fif : PCA-mags-v3 (1 x 306)  idle
            mag_ssp_upright.fif : PCA-mags-v4 (1 x 306)  idle
            mag_ssp_upright.fif : PCA-mags-v5 (1 x 306)  idle
            grad_ssp_upright.fif : PCA-grad-v1 (1 x 306)  idle
            grad_ssp_upright.fif : PCA-grad-v2 (1 x 306)  idle
            grad_ssp_upright.fif : PCA-grad-v3 (1 x 306)  idle
        Range : 248600 ... 788699 =    226.000 ...   716.999 secs
    Ready.
    Current compensation grade : 0
    add_eeg_ref defaults to True in 0.13, will default to False in 0.14, and will be removed in 0.15. We recommend to use add_eeg_ref=False and set_eeg_reference() instead.
    Adding average EEG reference projection.
    1 projection items deactivated
    Reading 0 ... 540099  =      0.000 ...   490.999 secs...
    Band-pass filtering from 1 - 40 Hz
    h_trans_bandwidth chosen to be 10.0 Hz
    146 events found
    Events id: [ 5  6  7 13 14 15 17 18 19]
    49 matching events found
    Applying baseline correction (mode: mean)
    Created an SSP operator (subspace dimension = 8)
    9 projection items activated


Then Maxfiltered and tSSS'd data.



.. code-block:: python

    raw = mne.io.read_raw_fif(raw_fname_in, preload=True)
    raw_sss = mne.io.read_raw_fif(sss_fname_in, preload=True)
    raw.info['bads'] = ['MEG1031', 'MEG1111']
    raw_sss.info['bads'] = ['MEG1031', 'MEG1111']

    raw = maxwell_filter(raw, calibration=cal, cross_talk=ctc, st_duration=5.)

    raw.filter(1, 40, fir_window='hann', l_trans_bandwidth=0.5, phase='zero',
               h_trans_bandwidth='auto', filter_length='10s')
    raw_sss.filter(1, 40, fir_window='hann', l_trans_bandwidth=0.5, phase='zero',
                   h_trans_bandwidth='auto', filter_length='10s')

    evoked_after = Epochs(raw, events, event_id=event_ids, picks=picks).average()
    evoked_sss = Epochs(raw_sss, events, event_id=event_ids, picks=picks).average()






.. rst-class:: sphx-glr-script-out

 Out::

    Opening raw data file /tsi/doctorants/data_gramfort/dgw_faces/ds117/sub002/MEG/run_01_raw.fif...
        Read a total of 8 projection items:
            mag_ssp_upright.fif : PCA-mags-v1 (1 x 306)  idle
            mag_ssp_upright.fif : PCA-mags-v2 (1 x 306)  idle
            mag_ssp_upright.fif : PCA-mags-v3 (1 x 306)  idle
            mag_ssp_upright.fif : PCA-mags-v4 (1 x 306)  idle
            mag_ssp_upright.fif : PCA-mags-v5 (1 x 306)  idle
            grad_ssp_upright.fif : PCA-grad-v1 (1 x 306)  idle
            grad_ssp_upright.fif : PCA-grad-v2 (1 x 306)  idle
            grad_ssp_upright.fif : PCA-grad-v3 (1 x 306)  idle
        Range : 248600 ... 788699 =    226.000 ...   716.999 secs
    Ready.
    Current compensation grade : 0
    add_eeg_ref defaults to True in 0.13, will default to False in 0.14, and will be removed in 0.15. We recommend to use add_eeg_ref=False and set_eeg_reference() instead.
    Adding average EEG reference projection.
    1 projection items deactivated
    Reading 0 ... 540099  =      0.000 ...   490.999 secs...
    Opening raw data file /tsi/doctorants/data_gramfort/dgw_faces/ds117/sub002/MEG/run_01_sss.fif...
    This filename (/tsi/doctorants/data_gramfort/dgw_faces/ds117/sub002/MEG/run_01_sss.fif) does not conform to MNE naming conventions. All raw files should end with raw.fif, raw_sss.fif, raw_tsss.fif, raw.fif.gz, raw_sss.fif.gz or raw_tsss.fif.gz
        Range : 248600 ... 788699 =    226.000 ...   716.999 secs
    Ready.
    Current compensation grade : 0
    add_eeg_ref defaults to True in 0.13, will default to False in 0.14, and will be removed in 0.15. We recommend to use add_eeg_ref=False and set_eeg_reference() instead.
    Adding average EEG reference projection.
    1 projection items deactivated
    Reading 0 ... 540099  =      0.000 ...   490.999 secs...
    Maxwell filtering raw data
        Using loaded raw data
    100 T1/T2 magnetometer channel types found. If using SSS, it is advised to replace coil types using "fix_mag_coil_types".
        Bad MEG channels being reconstructed: ['MEG1031', 'MEG1111']
        Processing 204 gradiometers and 102 magnetometers
        Using fine calibration sss_cal.dat
    Overwriting existing file.
            Adjusting non-orthogonal EX and EY
            Adjusted coil positions by (μ ± σ): 0.3° ± 0.3° (max: 1.3°)
    (X, Y) fit (3.1, 32.2) more than 20 mm from head frame origin
        Automatic origin fit: head of radius 80.2 mm
        Using origin 3.1, 32.2, 1.6 mm in the head frame
        Processing data using tSSS with st_duration=5.0
        Spatiotemporal window did not fit evenly into raw object. The final 6.00 seconds were lumped onto the previous window.
        Computing regularization
            Using 74/95 harmonic components for    0.000  (59/80 in, 15/15 out)
        Processing 98 data chunks of (at least) 5.0 sec
            Projecting  1 intersecting tSSS components for    0.000 -    4.999 sec  (#1/98)
            Projecting  1 intersecting tSSS components for    5.000 -    9.999 sec  (#2/98)
            Projecting  1 intersecting tSSS components for   10.000 -   14.999 sec  (#3/98)
            Projecting  1 intersecting tSSS components for   15.000 -   19.999 sec  (#4/98)
            Projecting 11 intersecting tSSS components for   20.000 -   24.999 sec  (#5/98)
            Projecting 11 intersecting tSSS components for   25.000 -   29.999 sec  (#6/98)
            Projecting 11 intersecting tSSS components for   30.000 -   34.999 sec  (#7/98)
            Projecting 11 intersecting tSSS components for   35.000 -   39.999 sec  (#8/98)
            Projecting 11 intersecting tSSS components for   40.000 -   44.999 sec  (#9/98)
            Projecting 11 intersecting tSSS components for   45.000 -   49.999 sec (#10/98)
            Projecting 11 intersecting tSSS components for   50.000 -   54.999 sec (#11/98)
            Projecting 11 intersecting tSSS components for   55.000 -   59.999 sec (#12/98)
            Projecting 11 intersecting tSSS components for   60.000 -   64.999 sec (#13/98)
            Projecting 11 intersecting tSSS components for   65.000 -   69.999 sec (#14/98)
            Projecting 11 intersecting tSSS components for   70.000 -   74.999 sec (#15/98)
            Projecting 11 intersecting tSSS components for   75.000 -   79.999 sec (#16/98)
            Projecting 11 intersecting tSSS components for   80.000 -   84.999 sec (#17/98)
            Projecting 12 intersecting tSSS components for   85.000 -   89.999 sec (#18/98)
            Projecting 11 intersecting tSSS components for   90.000 -   94.999 sec (#19/98)
            Projecting 11 intersecting tSSS components for   95.000 -   99.999 sec (#20/98)
            Projecting 11 intersecting tSSS components for  100.000 -  104.999 sec (#21/98)
            Projecting 11 intersecting tSSS components for  105.000 -  109.999 sec (#22/98)
            Projecting 11 intersecting tSSS components for  110.000 -  114.999 sec (#23/98)
            Projecting 11 intersecting tSSS components for  115.000 -  119.999 sec (#24/98)
            Projecting 11 intersecting tSSS components for  120.000 -  124.999 sec (#25/98)
            Projecting 11 intersecting tSSS components for  125.000 -  129.999 sec (#26/98)
            Projecting 11 intersecting tSSS components for  130.000 -  134.999 sec (#27/98)
            Projecting 11 intersecting tSSS components for  135.000 -  139.999 sec (#28/98)
            Projecting 11 intersecting tSSS components for  140.000 -  144.999 sec (#29/98)
            Projecting 11 intersecting tSSS components for  145.000 -  149.999 sec (#30/98)
            Projecting 11 intersecting tSSS components for  150.000 -  154.999 sec (#31/98)
            Projecting 11 intersecting tSSS components for  155.000 -  159.999 sec (#32/98)
            Projecting 11 intersecting tSSS components for  160.000 -  164.999 sec (#33/98)
            Projecting 11 intersecting tSSS components for  165.000 -  169.999 sec (#34/98)
            Projecting 11 intersecting tSSS components for  170.000 -  174.999 sec (#35/98)
            Projecting 11 intersecting tSSS components for  175.000 -  179.999 sec (#36/98)
            Projecting 11 intersecting tSSS components for  180.000 -  184.999 sec (#37/98)
            Projecting 11 intersecting tSSS components for  185.000 -  189.999 sec (#38/98)
            Projecting 11 intersecting tSSS components for  190.000 -  194.999 sec (#39/98)
            Projecting 11 intersecting tSSS components for  195.000 -  199.999 sec (#40/98)
            Projecting 11 intersecting tSSS components for  200.000 -  204.999 sec (#41/98)
            Projecting 11 intersecting tSSS components for  205.000 -  209.999 sec (#42/98)
            Projecting 11 intersecting tSSS components for  210.000 -  214.999 sec (#43/98)
            Projecting 11 intersecting tSSS components for  215.000 -  219.999 sec (#44/98)
            Projecting 11 intersecting tSSS components for  220.000 -  224.999 sec (#45/98)
            Projecting 11 intersecting tSSS components for  225.000 -  229.999 sec (#46/98)
            Projecting 11 intersecting tSSS components for  230.000 -  234.999 sec (#47/98)
            Projecting 11 intersecting tSSS components for  235.000 -  239.999 sec (#48/98)
            Projecting 11 intersecting tSSS components for  240.000 -  244.999 sec (#49/98)
            Projecting 11 intersecting tSSS components for  245.000 -  249.999 sec (#50/98)
            Projecting 11 intersecting tSSS components for  250.000 -  254.999 sec (#51/98)
            Projecting 11 intersecting tSSS components for  255.000 -  259.999 sec (#52/98)
            Projecting 11 intersecting tSSS components for  260.000 -  264.999 sec (#53/98)
            Projecting 11 intersecting tSSS components for  265.000 -  269.999 sec (#54/98)
            Projecting 11 intersecting tSSS components for  270.000 -  274.999 sec (#55/98)
            Projecting 11 intersecting tSSS components for  275.000 -  279.999 sec (#56/98)
            Projecting 11 intersecting tSSS components for  280.000 -  284.999 sec (#57/98)
            Projecting 11 intersecting tSSS components for  285.000 -  289.999 sec (#58/98)
            Projecting 11 intersecting tSSS components for  290.000 -  294.999 sec (#59/98)
            Projecting 11 intersecting tSSS components for  295.000 -  299.999 sec (#60/98)
            Projecting 11 intersecting tSSS components for  300.000 -  304.999 sec (#61/98)
            Projecting 11 intersecting tSSS components for  305.000 -  309.999 sec (#62/98)
            Projecting 11 intersecting tSSS components for  310.000 -  314.999 sec (#63/98)
            Projecting 11 intersecting tSSS components for  315.000 -  319.999 sec (#64/98)
            Projecting 11 intersecting tSSS components for  320.000 -  324.999 sec (#65/98)
            Projecting 11 intersecting tSSS components for  325.000 -  329.999 sec (#66/98)
            Projecting 11 intersecting tSSS components for  330.000 -  334.999 sec (#67/98)
            Projecting 11 intersecting tSSS components for  335.000 -  339.999 sec (#68/98)
            Projecting 11 intersecting tSSS components for  340.000 -  344.999 sec (#69/98)
            Projecting 11 intersecting tSSS components for  345.000 -  349.999 sec (#70/98)
            Projecting 11 intersecting tSSS components for  350.000 -  354.999 sec (#71/98)
            Projecting 11 intersecting tSSS components for  355.000 -  359.999 sec (#72/98)
            Projecting 11 intersecting tSSS components for  360.000 -  364.999 sec (#73/98)
            Projecting 11 intersecting tSSS components for  365.000 -  369.999 sec (#74/98)
            Projecting 11 intersecting tSSS components for  370.000 -  374.999 sec (#75/98)
            Projecting 11 intersecting tSSS components for  375.000 -  379.999 sec (#76/98)
            Projecting 11 intersecting tSSS components for  380.000 -  384.999 sec (#77/98)
            Projecting 11 intersecting tSSS components for  385.000 -  389.999 sec (#78/98)
            Projecting 11 intersecting tSSS components for  390.000 -  394.999 sec (#79/98)
            Projecting 11 intersecting tSSS components for  395.000 -  399.999 sec (#80/98)
            Projecting 11 intersecting tSSS components for  400.000 -  404.999 sec (#81/98)
            Projecting 11 intersecting tSSS components for  405.000 -  409.999 sec (#82/98)
            Projecting 11 intersecting tSSS components for  410.000 -  414.999 sec (#83/98)
            Projecting 11 intersecting tSSS components for  415.000 -  419.999 sec (#84/98)
            Projecting 11 intersecting tSSS components for  420.000 -  424.999 sec (#85/98)
            Projecting 11 intersecting tSSS components for  425.000 -  429.999 sec (#86/98)
            Projecting 11 intersecting tSSS components for  430.000 -  434.999 sec (#87/98)
            Projecting 11 intersecting tSSS components for  435.000 -  439.999 sec (#88/98)
            Projecting 11 intersecting tSSS components for  440.000 -  444.999 sec (#89/98)
            Projecting 11 intersecting tSSS components for  445.000 -  449.999 sec (#90/98)
            Projecting 11 intersecting tSSS components for  450.000 -  454.999 sec (#91/98)
            Projecting 11 intersecting tSSS components for  455.000 -  459.999 sec (#92/98)
            Projecting 11 intersecting tSSS components for  460.000 -  464.999 sec (#93/98)
            Projecting 11 intersecting tSSS components for  465.000 -  469.999 sec (#94/98)
            Projecting 11 intersecting tSSS components for  470.000 -  474.999 sec (#95/98)
            Projecting 11 intersecting tSSS components for  475.000 -  479.999 sec (#96/98)
            Projecting 11 intersecting tSSS components for  480.000 -  484.999 sec (#97/98)
            Projecting 11 intersecting tSSS components for  485.000 -  490.999 sec (#98/98)
    [done]
    Band-pass filtering from 1 - 40 Hz
    h_trans_bandwidth chosen to be 10.0 Hz
    Band-pass filtering from 1 - 40 Hz
    h_trans_bandwidth chosen to be 10.0 Hz
    49 matching events found
    Applying baseline correction (mode: mean)
    1 projection items activated
    49 matching events found
    Applying baseline correction (mode: mean)
    1 projection items activated


Plotting



.. code-block:: python

    evoked_before.plot(spatial_colors=True,
                       titles={'grad': 'Gradiometers before SSS',
                               'mag': 'Magnetometers before SSS'})
    evoked_after.plot(spatial_colors=True,
                      titles={'grad': 'tSSS gradiometers',
                              'mag': 'tSSS magnetometers'})
    evoked_sss.plot(spatial_colors=True,
                    titles={'grad': 'Maxfilter (tm) gradiometers',
                            'mag': 'Maxfilter (tm) magnetometers'})



.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/images/sphx_glr_plot_maxfilter_001.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_maxfilter_002.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_maxfilter_003.png
            :scale: 47




**Total running time of the script:**
(1 minutes 48.037 seconds)



.. container:: sphx-glr-download

    :download:`Download Python source code: plot_maxfilter.py <plot_maxfilter.py>`


.. container:: sphx-glr-download

    :download:`Download IPython notebook: plot_maxfilter.ipynb <plot_maxfilter.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
