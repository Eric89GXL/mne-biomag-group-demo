

.. _sphx_glr_auto_examples_plot_fanning.py:


Baselining vs. Highpass filtering
=================================

Here we compare the evokeds when we baseline it vs.
highpass filter it.



.. code-block:: python


    import os.path as op

    import mne
    from mne import Epochs

    from library.config import study_path

    subject = "sub003"
    event_ids = [5, 6, 7]  # Famous faces
    filter_params = dict(fir_window='hann', phase='zero',
                         h_trans_bandwidth='auto', filter_length='auto')







Read in raw data and prepare for epoching



.. code-block:: python

    raw_fname = op.join(study_path, 'ds117', subject, 'MEG', 'run_01_sss.fif')
    raw = mne.io.read_raw_fif(raw_fname, preload=True, add_eeg_ref=False)

    picks = mne.pick_types(raw.info, meg=True, exclude='bads')
    events = mne.find_events(raw, stim_channel='STI101', consecutive='increasing',
                             mask=4352, mask_type='not_and', min_duration=0.003,
                             verbose=True)





.. rst-class:: sphx-glr-script-out

 Out::

    Opening raw data file /tsi/doctorants/data_gramfort/dgw_faces/ds117/sub003/MEG/run_01_sss.fif...
    This filename (/tsi/doctorants/data_gramfort/dgw_faces/ds117/sub003/MEG/run_01_sss.fif) does not conform to MNE naming conventions. All raw files should end with raw.fif, raw_sss.fif, raw_tsss.fif, raw.fif.gz, raw_sss.fif.gz or raw_tsss.fif.gz
        Range : 222200 ... 765599 =    202.000 ...   695.999 secs
    Ready.
    Current compensation grade : 0
    Reading 0 ... 543399  =      0.000 ...   493.999 secs...
    147 events found
    Events id: [ 5  6  7 13 14 15 17 18 19]


First, we don't highpass filter and only baseline. Note how it creates a
spatially varying distortation of the time-domain signal in the form
of "fanning"



.. code-block:: python

    raw.filter(None, 40, **filter_params)
    evoked = Epochs(raw, events, event_id=event_ids, picks=picks,
                    baseline=(None, 0)).average()
    evoked.plot()
    evoked.plot_topomap()




.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/images/sphx_glr_plot_fanning_001.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_fanning_002.png
            :scale: 47


.. rst-class:: sphx-glr-script-out

 Out::

    Low-pass filtering at 40 Hz
    h_trans_bandwidth chosen to be 10.0 Hz
    Filter length of 682 samples (0.620 sec) selected
    48 matching events found
    Applying baseline correction (mode: mean)
    0 projection items activated


Next, we highpass filter but don't baseline. Now, the late effects in the
topography are no longer visible and the "fanning" has disappeared.



.. code-block:: python

    raw.filter(1, 40, l_trans_bandwidth=0.5, **filter_params)
    evoked = Epochs(raw, events, event_id=event_ids, picks=picks,
                    baseline=(None, 0)).average()
    evoked.plot()
    evoked.plot_topomap()



.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/images/sphx_glr_plot_fanning_003.png
            :scale: 47

    *

      .. image:: /auto_examples/images/sphx_glr_plot_fanning_004.png
            :scale: 47


.. rst-class:: sphx-glr-script-out

 Out::

    Band-pass filtering from 1 - 40 Hz
    h_trans_bandwidth chosen to be 10.0 Hz
    Filter length of 13640 samples (12.400 sec) selected
    48 matching events found
    Applying baseline correction (mode: mean)
    0 projection items activated


**Total running time of the script:**
(0 minutes 41.965 seconds)



.. container:: sphx-glr-download

    :download:`Download Python source code: plot_fanning.py <plot_fanning.py>`


.. container:: sphx-glr-download

    :download:`Download IPython notebook: plot_fanning.ipynb <plot_fanning.ipynb>`

.. rst-class:: sphx-glr-signature

    `Generated by Sphinx-Gallery <http://sphinx-gallery.readthedocs.io>`_
